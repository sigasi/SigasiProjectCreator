# Generated from DotF.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,14,128,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,1,0,1,0,1,1,1,1,4,1,36,8,1,11,1,12,1,37,1,2,1,
        2,4,2,42,8,2,11,2,12,2,43,1,3,1,3,1,3,1,3,5,3,50,8,3,10,3,12,3,53,
        9,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,5,4,64,8,4,10,4,12,4,67,
        9,4,1,4,1,4,1,5,1,5,1,5,5,5,74,8,5,10,5,12,5,77,9,5,1,6,1,6,1,6,
        3,6,82,8,6,1,6,1,6,5,6,86,8,6,10,6,12,6,89,9,6,1,6,1,6,1,7,1,7,1,
        8,1,8,1,8,1,9,1,9,1,10,4,10,101,8,10,11,10,12,10,102,1,10,1,10,1,
        11,1,11,1,12,1,12,1,13,1,13,5,13,113,8,13,10,13,12,13,116,9,13,1,
        13,1,13,1,14,1,14,5,14,122,8,14,10,14,12,14,125,9,14,1,14,1,14,1,
        51,0,15,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,0,17,8,19,9,21,10,23,11,
        25,12,27,13,29,14,1,0,8,3,0,10,10,43,43,92,92,2,0,10,10,92,92,1,
        0,10,10,3,0,32,32,45,45,58,58,8,0,36,36,42,42,46,57,65,90,92,92,
        95,95,97,123,125,125,4,0,33,33,44,44,46,46,63,63,3,0,9,9,13,13,32,
        32,1,0,92,92,138,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,
        0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        1,31,1,0,0,0,3,33,1,0,0,0,5,39,1,0,0,0,7,45,1,0,0,0,9,59,1,0,0,0,
        11,70,1,0,0,0,13,78,1,0,0,0,15,92,1,0,0,0,17,94,1,0,0,0,19,97,1,
        0,0,0,21,100,1,0,0,0,23,106,1,0,0,0,25,108,1,0,0,0,27,110,1,0,0,
        0,29,119,1,0,0,0,31,32,5,92,0,0,32,2,1,0,0,0,33,35,5,43,0,0,34,36,
        8,0,0,0,35,34,1,0,0,0,36,37,1,0,0,0,37,35,1,0,0,0,37,38,1,0,0,0,
        38,4,1,0,0,0,39,41,5,45,0,0,40,42,8,1,0,0,41,40,1,0,0,0,42,43,1,
        0,0,0,43,41,1,0,0,0,43,44,1,0,0,0,44,6,1,0,0,0,45,46,5,47,0,0,46,
        47,5,42,0,0,47,51,1,0,0,0,48,50,9,0,0,0,49,48,1,0,0,0,50,53,1,0,
        0,0,51,52,1,0,0,0,51,49,1,0,0,0,52,54,1,0,0,0,53,51,1,0,0,0,54,55,
        5,42,0,0,55,56,5,47,0,0,56,57,1,0,0,0,57,58,6,3,0,0,58,8,1,0,0,0,
        59,60,5,47,0,0,60,61,5,47,0,0,61,65,1,0,0,0,62,64,8,2,0,0,63,62,
        1,0,0,0,64,67,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,68,1,0,0,0,
        67,65,1,0,0,0,68,69,6,4,0,0,69,10,1,0,0,0,70,75,3,15,7,0,71,74,5,
        45,0,0,72,74,3,15,7,0,73,71,1,0,0,0,73,72,1,0,0,0,74,77,1,0,0,0,
        75,73,1,0,0,0,75,76,1,0,0,0,76,12,1,0,0,0,77,75,1,0,0,0,78,81,5,
        34,0,0,79,82,5,58,0,0,80,82,3,15,7,0,81,79,1,0,0,0,81,80,1,0,0,0,
        82,87,1,0,0,0,83,86,7,3,0,0,84,86,3,15,7,0,85,83,1,0,0,0,85,84,1,
        0,0,0,86,89,1,0,0,0,87,85,1,0,0,0,87,88,1,0,0,0,88,90,1,0,0,0,89,
        87,1,0,0,0,90,91,5,34,0,0,91,14,1,0,0,0,92,93,7,4,0,0,93,16,1,0,
        0,0,94,95,3,21,10,0,95,96,5,92,0,0,96,18,1,0,0,0,97,98,7,5,0,0,98,
        20,1,0,0,0,99,101,7,6,0,0,100,99,1,0,0,0,101,102,1,0,0,0,102,100,
        1,0,0,0,102,103,1,0,0,0,103,104,1,0,0,0,104,105,6,10,0,0,105,22,
        1,0,0,0,106,107,7,2,0,0,107,24,1,0,0,0,108,109,7,7,0,0,109,26,1,
        0,0,0,110,114,5,35,0,0,111,113,8,2,0,0,112,111,1,0,0,0,113,116,1,
        0,0,0,114,112,1,0,0,0,114,115,1,0,0,0,115,117,1,0,0,0,116,114,1,
        0,0,0,117,118,6,13,0,0,118,28,1,0,0,0,119,123,5,33,0,0,120,122,8,
        2,0,0,121,120,1,0,0,0,122,125,1,0,0,0,123,121,1,0,0,0,123,124,1,
        0,0,0,124,126,1,0,0,0,125,123,1,0,0,0,126,127,6,14,0,0,127,30,1,
        0,0,0,13,0,37,43,51,65,73,75,81,85,87,102,114,123,1,6,0,0
    ]

class DotFLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    PLUS_OPTION = 2
    DASH_OPTION = 3
    C_COMMENT = 4
    CC_COMMENT = 5
    FILEPATH = 6
    QUOTED_FILEPATH = 7
    CONT = 8
    LT = 9
    WS = 10
    NL = 11
    ESC = 12
    SH_COMMENT = 13
    EX_COMMENT = 14

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\'" ]

    symbolicNames = [ "<INVALID>",
            "PLUS_OPTION", "DASH_OPTION", "C_COMMENT", "CC_COMMENT", "FILEPATH", 
            "QUOTED_FILEPATH", "CONT", "LT", "WS", "NL", "ESC", "SH_COMMENT", 
            "EX_COMMENT" ]

    ruleNames = [ "T__0", "PLUS_OPTION", "DASH_OPTION", "C_COMMENT", "CC_COMMENT", 
                  "FILEPATH", "QUOTED_FILEPATH", "FILEPATH_CHAR", "CONT", 
                  "LT", "WS", "NL", "ESC", "SH_COMMENT", "EX_COMMENT" ]

    grammarFileName = "DotF.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


